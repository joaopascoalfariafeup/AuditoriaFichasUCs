# Ficha a avaliar - versão em português

## Unidade curricular
Tópicos Avançados em Inteligência Artificial

## Curso responsável
Mestrado em Inteligência Artificial

## Créditos ECTS
6

## Ano
1

## Semestre
1

## Objetivos
Proporcionar aos alunos conhecimentos sobre os novos desenvolvimentos em IA que envolvem avanços em áreas tão díspares como lógica, estatística e investigação operacional.<br /><br />Enfase será colocada em:<br />  - pesquisa probabilistica, com foco em Monte Carlo Tree Search<br />  - modelos gráficos probabilísticos, dirigidos e não dirigidos, incluindo inferência e aprendizagem de parâmetros e de estrutura; ligação â classificadores lineares e redes neuronais<br />  - representacão lógica: Lógica de primeira ordem (FOL) e Datalog para representação de estrutura; aprendizagem de programas lógicos em Programação Lógica Indutiva (ILP).<br />  - integração: Aprendizagem relacional estatística (SRL) e redes neuronais-lógicas (NeSy).<br /><br />O curso requer competências adquiridas em Desenho e Análise de Algoritmos, Inteligência Artificial e Data Mining.<br /><div id=&quot;gtx-trans&quot; style=&quot;position: absolute; left: 293px; top: 170.4px;&quot;> </div>

## Resultados de aprendizagem e competências
Desenvolver a capacidade de utilização de técnicas de inteligência artificial e algoritmos de pesquisa em situações práticas em que parte do conhecimento resida em bases de dados.

## Pré-requisitos e co-requisitos
Desenho e Análise de Algoritmos, Inteligência Artificial, Data Mining I

## Programa
Esta UC funcionará em 3 módulos, como segue:<br /><br /><strong>Módulo 1:</strong> Monte Carlo Tree Search<br />1.1. Introdução à Aprendizagem por Reforço::<br /> - Coneitos gerais<br /> - Processos de decisão de Markov (MDPs)<br /> - Exploration vs. exploitation<br />1.2. Bandit Algorithms:<br /> - Multi-armed bandit problem<br /> - Epsilon-greedy, UCB, Thompson sampling<br /> - Contextual bandits<br /> -Aplicações selecionadas<br />1.3. Monte Carlo Tree Search:<br /> - Fundamentos de MCTS<br /> - Políticas de árvore e políticas padrão<br /> - Limite superior de confiança para árvores (UCT)<br /> - Aplicações (jogos, robótica)<br />1.4.Tópicos Avançados:<br /> - Aprendizagem profunda por reforço<br /> - Aplicações em domínios selecionados<br /><br /><strong>Módulo 2: </strong>Representação em Lógica de primeira ordem e modelação<br />2.1 Introdução à programação lógica probabilística<br />    - breve revisão de programação lógica<br />    - representação do conhecimento usando programação lógica<br />    - representação do conhecimento usando programação lógica probabilística<br />    - sintaxe e semântica de programação lógica probabilística utilizando ProbLog e CLP(BN)<br />2.2 Aprendizagem de Programas em Lógica Probabilística <br />    - introdução à programação lógica indutiva (ILP)<br />    - algoritmos e sistemas para ILP<br />    - limitações<br />    - aprendendo regras probabilísticas lógicas de primeira ordem<br />        - algoritmos e complexidade<br />        - cálculos de probabilidade exatos e aproximados<br />        - combinando inferência probabilística com inferência lógica<br />2.3 Argumentação Bipolar (se o tempo permitir)<br /><br /><strong>Módulo 3:<br /></strong>3.1 ILP revisitado:<br />- lidar com grandes  data-sets<br />- Exemplos<br />- Inducão como Abdução.<br />3.2 SRL e NeSy<br />  - From Problog to NNs: it's all about layers<br />  - From TensorLog to GNNs: it's all about matrixes<br />  - Experimental Evaluation<br />3.3 Generative Models<br />    -  Does Logic Programming need attention?<br />    -  Meliad and AlphaProof<br />    - Tanenbaum's ToW<br />3.4 Where do you go from here?<br />     - Discussion with free-ring-your-favorite-paper!<br /><strong><br /></strong>

## Bibliografia obrigatória
Richard S. Sutton and Andrew G. Barto; Reinforcement Learning: An Introduction, MIT Press. ISBN: 978-0262039246 (http://incompleteideas.net/book/the-book-2nd.html)<br>
Fabrizio Riguzzi; Foundations of Probabilistic Logic Programming Languages, Semantics, Inference and Learning, Second Edition, River Publishers, 2022<br>
Luc de Raedt; <a href="https://discovery.up.pt/permalink/351PUCS_INST/1levj0s/alma990002923450108801" title="Probabilistic inductive logic programming (Abre numa nova janela)" target="_blank" >Probabilistic inductive logic programming</a>. ISBN: 9783540786511 <br>
Stuart Russell, Peter Norvig; Artificial Intelligence: A Modern Approach. ISBN: 0134610997<br>

## Bibliografia complementar
Stuart Russell, Peter Norvig; Artificial Intelligence: A Modern Approach, Pearson, 2020. ISBN: 978-0134610993<br>

## Métodos de ensino e atividades de aprendizagem
Exposição teórica com discussão da aplicação em inteligência artifical. <br />Resolução de exercícios.

## Software
python<br>

## Tipo de avaliação
Avaliação distribuída com exame final

## Componentes de Ocupação
- Estudo autónomo: 106.0 horas
- Frequência das aulas: 56.0 horas
- Total:: 162.0 horas

## Fórmula de cálculo da classificação final
Classificação final = T1 + T2 + T3<br />T1 = nota do 1.º teste (cotação máxima: 20/3 valores)<br />T2 = nota do 2.º teste (cotação máxima: 20/3 valores)<br />T3 = nota do 3.º teste (cotação máxima: 20/3 valores)<br /><br />Notas:<br /><br />(i) Os testes T1 e T2 são realizados no decorrer do semestre e abrangem os módulos 1 e 2, respetivamente.<br /><br />(ii) T3 é realizado na época de exames e corresponde ao módulo 3 do programa da disciplina.<br /><br />(iii) Qualquer estudante pode optar por não realizar T1, T2 ou T3 e obter a sua nota final realizando o exame de recurso.<br /><br />(iv) Os estudantes podem realizar o exame de recurso tanto para passar à disciplina como para melhorar a classificação. O exame de recurso consiste em três partes independentes, correspondentes a cada um dos módulos. Os estudantes que pretendam aprovação podem optar por realizar todas as partes ou apenas algumas, mantendo a classificação nas partes não realizadas.

## Obtenção de frequência
<div id=&quot;v1replybody1&quot;><br /><p>Frequência obrigatória às aulas, de acordo com o regulamento da U.P.</p><br /></div>

## Exames ou Trabalhos Especiais
n/a

## Melhoria de classificação
Estudantes que pretendam melhorar a sua classificação a alguns módulos devem realizar as partes correspondentes do exame de recurso.  Módulos não respondidos no recurso mantêm a nota do teste.



# Ficha a avaliar - versão em inglês

## Unidade curricular
Advanced Topics in Artificial Intelligence

## Curso responsável
Master in Artificial Intelligence

## Créditos ECTS
6

## Ano
1

## Semestre
1

## Objetivos
<span class=&quot;&quot; data-language-for-alternatives=&quot;&quot; data-language-to-translate-into=&quot;&quot; data-phrase-index=&quot;&quot;>Provide students with knowledge about new AI developments that involve advances in areas as diverse as logic, statistics and operations research.</span><br /><br /><span class=&quot;&quot; data-language-for-alternatives=&quot;&quot; data-language-to-translate-into=&quot;&quot; data-phrase-index=&quot;&quot;>Emphasis will be placed on:<br />  - probabilistic search with focus on Monte Carlo Tree Search</span><br /><span class=&quot;&quot; data-language-for-alternatives=&quot;&quot; data-language-to-translate-into=&quot;&quot; data-phrase-index=&quot;&quot;>  - directed and non-directed probabilistic graphical models, including inference and learning of parameters and structure;</span> <span class=&quot;&quot; data-language-for-alternatives=&quot;&quot; data-language-to-translate-into=&quot;&quot; data-phrase-index=&quot;&quot;>connection to linear classifiers and neural networks</span><br /><span class=&quot;&quot; data-language-for-alternatives=&quot;&quot; data-language-to-translate-into=&quot;&quot; data-phrase-index=&quot;&quot;>  - logical representation: First order logic (FOL) and Datalog for structure representation;</span> <span class=&quot;&quot; data-language-for-alternatives=&quot;&quot; data-language-to-translate-into=&quot;&quot; data-phrase-index=&quot;&quot;>learning logical programs in Inductive Logic Programming (ILP).</span><br /><span class=&quot;&quot; data-language-for-alternatives=&quot;&quot; data-language-to-translate-into=&quot;&quot; data-phrase-index=&quot;&quot;>  - integration: Statistical relational learning (SRL) and neural-logical networks (NeSy).</span><br /><br /><span class=&quot;&quot; data-language-for-alternatives=&quot;&quot; data-language-to-translate-into=&quot;&quot; data-phrase-index=&quot;&quot;>The course requires skills acquired in Design and Analysis of Algorithms, Artificial Intelligence and Data Mining.</span>

## Resultados de aprendizagem e competências
Students will develop competences on the usage of artificial intelligence and search / optimization methods in practical situations, in which a part of the knowledge is available in data sets or databases.

## Pré-requisitos e co-requisitos
PAlgorithm Design and Analysis, Artificial Intelligence, Data Mining I

## Programa
<span id=&quot;result_box&quot; class=&quot;&quot; lang=&quot;en&quot;>This UC will function in 3 modules, as follows:<br /><br /><strong>Module 1:</strong> Monte Carlo Tree Search<br />1.1. Introduction to Reinforcement Learning:<br />- Overview of reinforcement learning concepts<br />- Markov decision processes (MDPs)<br />- Exploration vs. exploitation trade-off<br />1.2. Bandit Algorithms:<br />- Multi-armed bandit problem<br />- Epsilon-greedy, UCB, Thompson sampling<br />- Contextual bandits<br />- Selected applications<br />1.3. Monte Carlo Tree Search:<br />- Basics of MCTS<br />- Tree policies and default policies<br />- Upper confidence bound for trees (UCT)<br />- Applications (game playing, robotics)<br />1.4. Advanced Topics:<br />- Deep reinforcement learning<br />- Applications in selected domains<br /><br /><strong>Módulo 2: </strong>Logic Representation and Modeling<br />2.1 Introduction to Probabilistic Logic Programming<br />    - brief review of logic programming<br />    - knowledge representation using logic programming<br />    - knowledge representation using probabilistic logic programming<br />    - syntax and semantics of probabilistic logic programming using ProbLog and CLP(BN)<br />2.2 Learning Probabilistic Logic Programs<br />    introduction to inductive logic programming (ILP)<br />    algorithms and systems for ILP<br />    limitations<br />    learning first order logic probabilistic rules<br />        algorithms and complexity<br />        exact and approximate probability calculations<br />        combining probabilistic inference with logical inference<br />2.3  Bipolar Argumentation (if time allows)<br /><br /><strong>Module 3: <br /></strong>3.1. Learning in Logic Revisited.<br /> - Can ILP scale?<br /> - Dataset cxamples<br /> - From Abduction to Induction<br />3.2. SRL and Nesy Revisited<br />  - From Problog to NNs: it's all about layers<br />  - From TensorLog to GNNs: it's all about matrixes<br />   - Experimental Evaluation<br />3.3 Generative Models<br />    -  Does Logic Programming need attention?<br />    -  Meliad and AlphaProof<br />     - Tanenbaum's ToW<br />3.4 Where do you go from here?<br />     - Discussion with free-ring-your-favorite-paper!<br /><br /></span>

## Bibliografia obrigatória
Richard S. Sutton and Andrew G. Barto; Reinforcement Learning: An Introduction, MIT Press. ISBN: 978-0262039246<br>
Fabrizio Riguzzi; Foundations of Probabilistic Logic Programming Languages, Semantics, Inference and Learning, Second Edition, River Publishers, 2022<br>
Luc de Raedt; <a href="https://discovery.up.pt/permalink/351PUCS_INST/1levj0s/alma990002923450108801" title="Probabilistic inductive logic programming (Opens in a new window)" target="_blank" >Probabilistic inductive logic programming</a>. ISBN: 9783540786511 <br>
Stuart Russell, Peter Norvig; Artificial Intelligence: A Modern Approach. ISBN: 0134610997<br>

## Bibliografia complementar
Stuart Russell, Peter Norvig; Artificial Intelligence: A Modern Approach, Pearson, 2020. ISBN: 978-0134610993<br>

## Métodos de ensino e atividades de aprendizagem
Lectures: presentation of the program topics and discussion of aplications in artificial intelligence. <br />Labs: problem solving.

## Software
python<br>

## Tipo de avaliação
Distributed evaluation with final exam

## Componentes de Ocupação
- Estudo autónomo: 106.0 hours
- Frequência das aulas: 56.0 hours
- Total:: 162.0 hours

## Fórmula de cálculo da classificação final
Final Grade = T1 + T2 + T3<br />T1 = Grade from the 1st test (maximum score: 20/3 points)<br />T2 = Grade from the 2nd test (maximum score: 20/3 points)<br />T3 = Grade from the 3rd test (maximum score: 20/3 points)<br /><br />Notes:<br /><br />(i) Tests T1 and T2 are held during the semester and cover modules 1 and 2, respectively.<br /><br />(ii) T3 is held during the exam period and corresponds to module 3 of the course syllabus.<br /><br />(iii) Any student can choose not to take T1, T2, or T3 and obtain their final grade by taking the resit exam.<br /><br />(iv) Students can take the resit exam both to pass the course and to improve their grade. The resit exam consists of three independent parts, corresponding to each of the modules. Students seeking to pass can choose to complete all parts or just some, retaining the grade from the parts not completed.

## Obtenção de frequência
<p>Mandatory attendance at classes, in accordance with U.P. rules.</p>

## Exames ou Trabalhos Especiais
n/a

## Melhoria de classificação
Students who want to improve their grade in certain modules should complete the corresponding parts of the resit exam. Modules not attempted during the resit will retain their original test grade.

